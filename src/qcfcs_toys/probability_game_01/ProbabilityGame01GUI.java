package qcfcs_toys.probability_game_01;

import javax.swing.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.NumberFormat;

/**
 * This class implements the GUI for the probability game. It was generated by the Intellij Idea GUI designer. The
 * GUI form is located in ProbabilityGame01GUI.form.
 * Created by reesede on 2/19/2017.
 * @author David E. Reese
 * @version 3.1.1
 * @since 3.1.1
 */

// Copyright 2017 David E. Reese
//
// This file is part of QCfCS_java.
//
// QCfCS_java is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// QCfCS_java is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with QCfCS_java.  If not, see <http://www.gnu.org/licenses/>.
//
// History:
//      20170219    D.E. Reese          Creation (Programming Drill 3.1.1)
//      20170228    D.E. Reese          Added createUIComponents(). Changed JTable elements to
//                                      ProbabilityGameMatrixTable classes.

public class ProbabilityGame01GUI
{
    /**
     * Title of window.
     */
    private static final String title = "Probabilty Game 01";

    /**
     * Horizontal location of top left of window.
     */
    private static final int xLoc = 200;

    /**
     * Vertical location of top left of window.
     */
    private static final int yLoc = 200;

    /**
     * Width of window.
     */
    private static final int width = 1000;

    /**
     * Height of window.
     */
    private static final int height = 600;

    /**
     * Initial number of states in the game.
     */
    private static final int initialNumberOfStates = 5;

    private JFrame mainFrame;
    private JPanel panel1;
    private JPanel gameTypePanel;
    private JPanel controlPanel;
    private JRadioButton booleanGameButton;
    private JRadioButton realGameButton;
    private JRadioButton complexGameButton;
    private JButton startButton;
    private JPanel mainPanel;
    private JLabel iterationCountLabel;
    private JButton executeButton;
    private JLabel numStateLabel;
    private JFormattedTextField numStatesTextField;
    private JScrollPane mainScrollPane;
    private JPanel gamePanel;
    private JPanel matrixPanel;
    private JPanel statePanel;
    private JButton quitButton;
    private JLabel transitionMatrixLabel;
    private JLabel stateVectorLabel;
    private ProbabilityGameMatrixTable transitionMatrixTable;
    private ProbabilityGameMatrixTable stateVectorTable;
    private ButtonGroup gameTypeButtonGroup;

    public ProbabilityGame01GUI()
    {
        // Set up main frame.

        initializeMainFrame();

        // Create the game type radio button group.

        initializeGameTypeButtonGroup();

        // Create listeners.

        quitButton.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent actionEvent)
            {
                System.exit(0);
            }
        });

        startButton.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent actionEvent)
            {

            }
        });

        // Make the window visible.

        mainFrame.pack();
        mainFrame.setVisible(true);
    }

    /**
     * This method initializes the frame for the program GUI.
     */
    private void initializeMainFrame ()
    {
        mainFrame = new JFrame();
        mainFrame.setSize(width, height);
        mainFrame.setLocation(xLoc,yLoc);
        mainFrame.setResizable(true);
        mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        mainFrame.setContentPane(panel1);
    }

    /**
     * This method initializes the game type radio button group.
     */
    private void initializeGameTypeButtonGroup()
    {
        gameTypeButtonGroup = new ButtonGroup();
        gameTypeButtonGroup.add(booleanGameButton);
        gameTypeButtonGroup.add(realGameButton);
        gameTypeButtonGroup.add(complexGameButton);
        booleanGameButton.setSelected(true);
        realGameButton.setSelected(false);
        complexGameButton.setSelected(false);

        // Delete these lines when different types of games are implements.

        realGameButton.setEnabled(false);       // Delete when the real number game is implemented.
        complexGameButton.setEnabled(false);    // Delete when the complex number game is implemented.
    }

    /**
     * This method initializes components from the GUI form.
     */
    private void createUIComponents()
    {
        transitionMatrixTable = new ProbabilityGameMatrixTable(ProbabilityGameMatrixTable.TABLE_TYPE_BOOLEAN,
                initialNumberOfStates,initialNumberOfStates);

        stateVectorTable = new ProbabilityGameMatrixTable(ProbabilityGameMatrixTable.TABLE_TYPE_INTEGER,
                initialNumberOfStates,1);
    }
}
